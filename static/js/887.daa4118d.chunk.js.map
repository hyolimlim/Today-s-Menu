{"version":3,"file":"static/js/887.daa4118d.chunk.js","mappings":"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","sources":["pages/Main/Search.jsx","hooks/useScrollToTop.js","pages/Main/Recipes.jsx","pages/Main/RecipeList.jsx","pages/Main/Main.jsx","hooks/useObserver.js","hooks/useGetData.js"],"sourcesContent":["import React, { useContext, useCallback, useRef } from \"react\";\r\nimport { SearchIcon } from \"../../assets/Index\";\r\nimport \"../../styles/Design.scss\";\r\nimport { RecipeContext } from \"../../store/RecipeProvider\";\r\n\r\nfunction Search() {\r\n  const { setInput, setOption } = useContext(RecipeContext);\r\n  const inputRef = useRef();\r\n  const optionRef = useRef();\r\n\r\n  const onKeyDown = useCallback((e) => {\r\n    if (e.key === \"Enter\" && e.target.value.trim().length > 0) {\r\n      setInput(inputRef.current.value);\r\n      setOption(optionRef.current.value);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <div className=\"searchbar__inputitem\">\r\n        <select ref={optionRef}>\r\n          <option value=\"음식명\">음식명</option>\r\n          <option value=\"재료명\">재료명</option>\r\n        </select>\r\n        <input\r\n          className=\"input\"\r\n          onKeyDown={onKeyDown}\r\n          ref={inputRef}\r\n          placeholder=\"레시피를 검색해보세요\"\r\n        ></input>\r\n      </div>\r\n      <div\r\n        className=\"searchbar__icon\"\r\n        onClick={() => {\r\n          setInput(inputRef.current.value);\r\n          setOption(optionRef.current.value);\r\n        }}\r\n      >\r\n        <SearchIcon width=\"30px\" height=\"30px\" fill=\"#5f8d4e\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","function useScrollToTop() {\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return { scrollToTop };\r\n}\r\n\r\nexport default useScrollToTop;\r\n","import React, { useContext } from \"react\";\r\nimport { RecipeContext } from \"../../store/RecipeProvider\";\r\n\r\nfunction Recipes({ data }) {\r\n  const { setIsOpen, setData } = useContext(RecipeContext);\r\n\r\n  const handleModal = () => {\r\n    setIsOpen(true);\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe\" onClick={handleModal}>\r\n      <img src={data.ATT_FILE_NO_MAIN} alt=\"대표 이미지\" />\r\n      <div className=\"recipe__item\">\r\n        <h1>{data.RCP_NM}</h1>\r\n        <span>{data.RCP_PAT2}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recipes;\r\n","import React from \"react\";\r\nimport Recipes from \"./Recipes\";\r\n\r\nfunction RecipeList({ flatRecipeArr }) {\r\n  return (\r\n    <div className=\"recipelist\">\r\n      {flatRecipeArr?.map((recipe, index) => (\r\n        <Recipes key={index} data={recipe} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\r\n","import React, { useRef, useState, useEffect, useContext } from \"react\";\r\nimport Search from \"./Search\";\r\nimport { useGetData } from \"../../hooks/useGetData\";\r\nimport useObserver from \"../../hooks/useObserver\";\r\nimport { Loading } from \"../../assets/Index\";\r\nimport { TopIcon } from \"../../assets/Index\";\r\nimport useScrollToTop from \"../../hooks/useScrollToTop\";\r\nimport RecipeList from \"./RecipeList\";\r\nimport RecipeDetail from \"../RecipeDetail/RecipeDetail\";\r\nimport { RecipeContext } from \"../../store/RecipeProvider\";\r\n\r\nfunction Main() {\r\n  const bottomRef = useRef(null);\r\n  const isIntersectiong = useObserver(bottomRef);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const { setSize, size, recipe, isNodata, isEndData, isLoading } =\r\n    useGetData();\r\n\r\n  const { scrollToTop } = useScrollToTop();\r\n\r\n  useEffect(() => {\r\n    const handleShowButton = () => {\r\n      if (window.scrollY > 500) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", handleShowButton);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleShowButton);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isIntersectiong && !isLoading & !isEndData) {\r\n      setSize(() => size + 1);\r\n    }\r\n  }, [isIntersectiong, isLoading, isEndData]);\r\n\r\n  const { isOpen } = useContext(RecipeContext);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <Search />\r\n      <div className=\"main__introduce\">\r\n        <h1>레시피 리스트</h1>\r\n      </div>\r\n      {isVisible ? (\r\n        <div\r\n          className=\"main__scrollbutton\"\r\n          onClick={() => {\r\n            scrollToTop();\r\n          }}\r\n        >\r\n          <TopIcon />\r\n        </div>\r\n      ) : null}\r\n      {!isNodata ? (\r\n        <>\r\n          {isOpen && <RecipeDetail />}\r\n          <RecipeList flatRecipeArr={recipe} />\r\n        </>\r\n      ) : (\r\n        <div>데이터가 없습니다.</div>\r\n      )}\r\n      <div ref={bottomRef} className=\"loading\">\r\n        {!isLoading && !isNodata && !isEndData ? <Loading /> : null}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useObserver(ref) {\r\n  const [isIntersecting, setIntersection] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n\r\n    const Io = new IntersectionObserver(([entry]) =>\r\n      setIntersection(entry.isIntersecting)\r\n    );\r\n\r\n    Io.observe(ref.current);\r\n    return () => {\r\n      Io.disconnect();\r\n    };\r\n  }, [ref]);\r\n\r\n  return isIntersecting;\r\n}\r\n","import useSWRInfinite from \"swr/infinite\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { RecipeContext } from \"../store/RecipeProvider\";\r\n\r\nexport function useGetData() {\r\n  const url = `http://openapi.foodsafetykorea.go.kr/api/${process.env.REACT_APP_API_KEY}/COOKRCP01/json`;\r\n\r\n  const fetcher = async (url) => {\r\n    const res = await fetch(url);\r\n    return res.json();\r\n  };\r\n\r\n  const {\r\n    recipe,\r\n    setRecipe,\r\n    total,\r\n    setTotal,\r\n    input,\r\n    option,\r\n    isNodata,\r\n    setIsNodata,\r\n    isLoadingData,\r\n    setIsLoadingData,\r\n    isEndData,\r\n    setIsEndData,\r\n  } = useContext(RecipeContext);\r\n\r\n  const getKey = (pageIndex, previousPageData) => {\r\n    if (previousPageData && previousPageData.COOKRCP01.row.length === 0)\r\n      return null;\r\n\r\n    const start = pageIndex === 0 ? 0 : pageIndex * 10 + 1;\r\n    const end = pageIndex === 0 ? 10 : pageIndex * 10 + 10;\r\n\r\n    if (!input) {\r\n      return `${url}/${start}/${end}`;\r\n    } else if (input && option && option === \"재료명\") {\r\n      return `${url}/${start}/${end}/RCP_PARTS_DTLS=${input}`;\r\n    } else if (input && option && option === \"음식명\") {\r\n      return `${url}/${start}/${end}/RCP_NM=${input}`;\r\n    }\r\n  };\r\n\r\n  const { data, error, size, setSize, isLoading, isValidating } =\r\n    useSWRInfinite(getKey, fetcher, {\r\n      revalidateIfStale: false,\r\n      revalidateFirstPage: false,\r\n      revalidateOnFocus: false,\r\n      dedupingInterval: 10000,\r\n      suspense: true,\r\n    });\r\n\r\n  useEffect(() => {\r\n    const recipeData = data.map((item) => item.COOKRCP01);\r\n    setRecipe(recipeData?.map((item) => item.row).flat());\r\n    setTotal(recipeData[0].total_count);\r\n    setIsNodata(recipeData[0].total_count === \"0\");\r\n    setIsLoadingData((!data && !error && input) || isLoading || isValidating);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    Number(total) - recipe.length < 1\r\n      ? setIsEndData(true)\r\n      : setIsEndData(false);\r\n  }, [recipe]);\r\n\r\n  return {\r\n    data,\r\n    setSize,\r\n    size,\r\n    recipe,\r\n    isLoadingData,\r\n    isNodata,\r\n    isEndData,\r\n    isLoading,\r\n  };\r\n}\r\n"],"names":["useContext","RecipeContext","setInput","setOption","inputRef","useRef","optionRef","onKeyDown","useCallback","e","key","target","value","trim","length","current","className","ref","placeholder","onClick","width","height","fill","scrollToTop","window","scrollTo","top","behavior","data","setIsOpen","setData","src","ATT_FILE_NO_MAIN","alt","RCP_NM","RCP_PAT2","flatRecipeArr","map","recipe","index","bottomRef","isIntersectiong","useState","isIntersecting","setIntersection","useEffect","Io","IntersectionObserver","entry","observe","disconnect","useObserver","isVisible","setIsVisible","url","process","fetcher","fetch","res","json","setRecipe","total","setTotal","input","option","isNodata","setIsNodata","isLoadingData","setIsLoadingData","isEndData","setIsEndData","useSWRInfinite","pageIndex","previousPageData","COOKRCP01","row","start","end","revalidateIfStale","revalidateFirstPage","revalidateOnFocus","dedupingInterval","suspense","error","size","setSize","isLoading","isValidating","recipeData","item","flat","total_count","Number","useGetData","useScrollToTop","handleShowButton","scrollY","addEventListener","removeEventListener","isOpen","RecipeDetail"],"sourceRoot":""}